@page "/"
@using GameStore.Client
@using GameStore.Client.Models
@inject NavigationManager NavigationManager

<PageTitle>Game Catalogue</PageTitle>

<h1>Game Catalogue</h1>
<div class="row mb-4">
    <div class="col-sm-6">
        <button @onclick=@CreateGame type="button" class="btn btn-primary">New Game</button>
    </div>
</div>
@if (_games is null)
{
    <p>Loading...</p>
}
else
{
    <DeleteGameModal Game="@currentGame" OnClose="@OnDeleteModalClose"/>
    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
        <th>Id</th>
        <th>Name</th>
        <th>Genre</th>
        <th>Price</th>
        <th>Release date</th>
        <th></th>
        </thead>
        <tbody>
        @foreach (var game in _games)
        {
            <tr>
                <td>@game.Id</td>
                <td>@game.Name</td>
                <td>@game.Genre</td>
                <td>@game.Price</td>
                <td>@game.ReleaseDate.ToString("MM/dd/yyyy")</td>
                <td>
                    <button class="btn btn-primary" @onclick="()=>HandleEditClick(game.Id)">
                        <i class="oi oi-pencil"></i>
                    </button>
                    <button 
                        class="btn btn-danger" 
                        @onclick="()=> currentGame = game" 
                        data-bs-toggle="modal"
                        data-bs-target="#deleteModal"
                    >
                        <i class="oi oi-x"></i>
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}



@code{
    private Game[]? _games;
    
    private Game? currentGame;

    protected override void OnInitialized()
    {
        _games = GameClient.GetGames();
        base.OnInitialized();
    }

    private void CreateGame()
    {
        NavigationManager.NavigateTo("/game");
    }

    private void HandleEditClick(int id)
    {
        NavigationManager.NavigateTo($"/game/{id}");
    }

    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            GameClient.DeleteGame(currentGame!.Id);
            _games = GameClient.GetGames();
        }
    }
}
