@page "/game"
@page "/game/{id:int}"
@using GameStore.Client.Models
@inject NavigationManager NavigationManager

<PageTitle>@pageTitle</PageTitle>
<h1>Game Catalogue</h1>
<h3>@pageTitle</h3>

@if (game is null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
     <div class="col-sm-4">
         <EditForm Model=@game OnValidSubmit=@HandleSubmit>
             <DataAnnotationsValidator/>
             <ValidationSummary/>
             <div class="mb-3">
                 <label for="name" class="form-label">Name:</label>
                 <InputText id="name" @bind-Value="game.Name" class="form-control"></InputText>
             </div>
             <div class="mb-3">
                 <label for="genre" class="form-label">Genre:</label>
                 <InputSelect id="genre" @bind-Value="game.Genre" class="form-select">
                     <option value="">Select genre</option>
                     <option value="Fighting">Fighting</option>
                     <option value="Kids and Family">Kids and Family</option>
                     <option value="Racing">Racing</option>
                     <option value="RolePlaying">RolePlaying</option>
                     <option value="Sports">Sports</option>
                 </InputSelect>
             </div>
             <div class="mb-3">
                 <label for="price" class="form-label">Price:</label>
                 <InputNumber id="price" @bind-Value="game.Price" class="form-control"></InputNumber>
             </div>
             <div class="mb-3">
                 <label for="releaseDate" class="form-label">ReleaseDate:</label>
                 <InputDate id="releaseDate" @bind-Value="game.ReleaseDate" class="form-control"></InputDate>
             </div>
             <button type="submit" class="btn btn-primary">Save</button>
             <button @onclick="@HandleCancel" type="button" class="btn btn-secondary">Cancel</button>
         </EditForm>
     </div>
 
 </div>
}


@code {
    private string pageTitle = string.Empty;
    [Parameter] //id from url
    public int? Id { get; set; }

    private Game? game;

    protected override void OnParametersSet()
    {
        if (Id is null)
        {
            game = new()
            {
                Name = string.Empty,
                Genre = string.Empty,
                ReleaseDate = DateTime.UtcNow
            };
            pageTitle = "New game";
        }
        else
        {
            Game foundGame = GameClient.GetGame(Id.Value);
            game = new()
            {
                Id = foundGame.Id,
                Name = foundGame.Name,
                Genre = foundGame.Genre,
                Price = foundGame.Price,
                ReleaseDate = foundGame.ReleaseDate,
            };
            pageTitle = $"Edit {game.Name}";
        }
        // base.OnParametersSet();
    }

    private void HandleSubmit()
    {
        if (game!.Id == 0)
        {
            GameClient.AddGame(game);
        }
        else
        {
            GameClient.UpdateGame(game);
        }
        
        NavigationManager.NavigateTo("/");
    }
    private void HandleCancel()
    {
        NavigationManager.NavigateTo("/");
    }

}